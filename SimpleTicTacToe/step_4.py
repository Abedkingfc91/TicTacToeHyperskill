# -*- coding: utf-8 -*-
"""Step 4

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11Pon-s_evfMk90JqDK_-dJqcB9EJPrz-
"""

def print_grid():
    print("---------")
    print("|", m[0][0], m[0][1], m[0][2], "|")
    print("|", m[1][0], m[1][1], m[1][2], "|")
    print("|", m[2][0], m[2][1], m[2][2], "|")
    print("---------")


def are_coordinates(c_1, c_2):
    ret = True
    if int(c_1) > 3 or int(c_2) > 3:
        ret = False
    return ret


def is_digit(c_1, c_2):
    return c_1.isdigit() and c_2.isdigit()


def is_occupied(c_1, c_2):
    val = m[int(c_1) - 1][int(c_2) - 1]
    return val == "X" or val == "O"


def update_grid(c_1, c_2):
    m[int(c_1) - 1][int(c_2) - 1] = m[int(c_1) - 1][int(c_2) - 1].replace("_", "X")
    print_grid()
def final():
    valid = False
    while not valid:
        x, y = input("Please enter the coordinates: ").split()
        if not is_digit(x, y):
            print("You should enter numbers!")
        elif not are_coordinates(x, y):
            print("Coordinates should be from 1 to 3!")
        elif is_occupied(x, y):
            print("This cell is occupied! Choose another one!")
        else:
            valid = True

    update_grid(x, y)


tic_tac = input("Enter cells: ")
b = list(tic_tac)
m = [[b[0], b[1], b[2]], [b[3], b[4], b[5]], [b[6], b[7], b[8]]]

sym_x = tic_tac.count("X")
sym_o = tic_tac.count("O")

print_grid()
final()